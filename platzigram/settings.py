"""
Django settings for platzigram project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a0sgzmq3(*^%-_9d=dn8(h(01zu5wpw=*h9riw%2)aqrt2-tc('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #apps locales y/o propias
    'posts',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    #Aqui ponemos el middleware que creamos
    'platzigram.middleware.ProfileCompletionMiddle'
]

ROOT_URLCONF = 'platzigram.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        
        #'DIRS': [] -- viene asi por defecto, pero llenamos[] para decirle que 
        #donde esta la carpeta que creamos en el proyecto, que es templates
        'DIRS': [BASE_DIR / 'TEMPLATES'],
        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'platzigram.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

"""Lo que concierne a estos 2 de estaticos es todo lo de html y css"""
#Esta es la ruta donde se encuentra el directorio con los variables estaticos
#lo que es el css, la barra de navegacion que queremos que siempre este
#en todas las paginas, etc
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

#Estos son metodos que usar√° django para encontrar nuestros archivos estaticos(los de arriba)
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
"""Hasta aqui lo de los estaticos"""

#Este lo ponemos para decirle donde esta la multimedia de la foto
#de los usuarios para que la muestre
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')#lo qu esta entre '' es donde ira a buscar
#las imagenes de los usuarios que en mi caso le puse media, BASE_DIR hace que busque en la
#carpeta principal


#Aqui ponemos el path(camino) que queremos para las imagenes de los usuarios
# y debe tener lo mismo que en MEDIA_ROOT solo que ente /y/
MEDIA_URL = '/media/'

#Ponemos el login_url para que al intentar entrar localhost/posts directamente
#lo mande para el login si es que no se ha logeado
LOGIN_URL = '/users/login'

#Esto lo ponemos para cambiar la direccion que tiene por defecto la vista LoginView
#despues de darle enter, para que vaya a donde queremos.
LOGIN_REDIRECT_URL = '/'

#Lo ponemos para defenir a donde va a envia cuando se termina de hacer logout, para 
#cambial la que esta por defecto en LogoutView
LOGOUT_REDIRECT_URL = '/users/login'